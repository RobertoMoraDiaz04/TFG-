security:

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Este firewall permite acceso a herramientas de desarrollo
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Este firewall maneja el login y entrega el token JWT
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Este firewall protege el resto de las rutas de la API
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
    # Público
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }

    # Solo admins pueden POST /api/products
    - { path: ^/api/products$, roles: ROLE_ADMIN, methods: [POST] }

    # Público puede ver productos
    - { path: ^/api/products$, roles: PUBLIC_ACCESS, methods: [GET] }

    # Todo lo demás en /api requiere autenticación
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

